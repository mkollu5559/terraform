$allKeyVaults = Get-AzKeyVault

foreach ($vault in $allKeyVaults) {
    $vaultName = $vault.VaultName

    # Get all secrets from this vault
    $allSecrets = Get-AzKeyVaultSecret -VaultName $vaultName

    foreach ($Secret in $allSecrets) {
        $secretName = $Secret.Name

        # Get all versions of this secret
        $versions = Get-AzKeyVaultSecret -VaultName $vaultName -Name $secretName -IncludeVersions

        # If no versions exist, skip to the next secret
        if (-not $versions) {
            Continue
        }

        # Get the latest version of the secret from Key Vault
        $latestSecret = Get-AzKeyVaultSecret -VaultName $vaultName -Name $secretName
        $currentVersionId = ($latestSecret.Id -split "/")[-1]  # Extract the current/latest version ID

        # Filter out any version that HAS an "ExpirationSetDate" tag
        $filteredVersions = $versions | Where-Object {
            $_.Tags -is $null -or -not ($_.Tags.ContainsKey("ExpirationSetDate"))
        }

        # Sort by creation time DESCENDING (newest first) and select the first one
        $newestVersion = $filteredVersions | Sort-Object Created -Descending | Select-Object -First 1

        # If we have no versions left after filtering, skip to the next secret
        if (-not $newestVersion) {
            Continue
        }

        # Extract the selected version ID
        $selectedVersionId = ($newestVersion.Id -split "/")[-1]

        # Check if the selected version is NOT the current version
        if ($selectedVersionId -ne $currentVersionId) {
            Write-Host "WARNING: This is NOT the current version for $vaultName -> $secretName"
            Write-Host "    Selected Version: $selectedVersionId"
            Write-Host "    Current Version:  $currentVersionId"
            Write-Host ""
        }
    }
}
