# Make sure you're authenticated:
#   Connect-AzAccount
# If you have multiple subscriptions, set the context if needed:
#   Set-AzContext -Subscription "YOUR_SUBSCRIPTION_ID_OR_NAME"

# Get all Key Vaults in the currently selected subscription
$allKeyVaults = Get-AzKeyVault

foreach ($vault in $allKeyVaults) {
    $vaultName = $vault.VaultName
    Write-Host "==================================================="
    Write-Host "Vault: $vaultName"
    Write-Host "==================================================="

    # Get the (latest) version of all secrets to discover their names
    $allSecrets = Get-AzKeyVaultSecret -VaultName $vaultName

    foreach ($secret in $allSecrets) {
        $secretName = $secret.Name
        Write-Host "  Processing Secret: $secretName"

        # 1) Get ALL versions of this secret
        $versions = Get-AzKeyVaultSecret -VaultName $vaultName -Name $secretName -IncludeVersions
        if (-not $versions) {
            Write-Host "    No versions returned for secret '$secretName'."
            Write-Host ""
            continue
        }

        # 2) Filter out any version that HAS an ExpirationDate tag
        $filteredVersions = $versions | Where-Object {
            -not (($_.Tags) -and ($_.Tags.ContainsKey("ExpirationDate")))
        }

        # 3) Sort by creation time DESCENDING (newest first) and select the first one
        $newestVersion = $filteredVersions | Sort-Object Created -Descending | Select-Object -First 1

        if ($newestVersion) {
            Write-Host "    Newest version WITHOUT 'ExpirationDate' tag:"
            Write-Host "      VersionId: $($newestVersion.Id)"
            Write-Host "      Created:   $($newestVersion.Created)"

            # -------------------------------------------------------------------
            # Always print the secret value from .Value as-is (plain text),
            # even if it's null, empty, or contains braces.
            # -------------------------------------------------------------------
            $secretValue = $newestVersion.Value

            Write-Host "      Secret Value (plaintext, no checks): '$secretValue'"
        }
        else {
            Write-Host "    No matching versions found (all had an 'ExpirationDate' tag)."
        }

        Write-Host ""
    }
}
