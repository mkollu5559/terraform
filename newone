# Prerequisite: Have the Az PowerShell module installed
# and be logged in via Connect-AzAccount.

# --- Define your tags ---
$Tag1Key   = "maneesha"
$Tag1Value = "script"

$Tag2Key   = "ExpirationSetDate"
# For example, store today's date as the tag value:
$Tag2Value = (Get-Date).ToString("yyyy-MM-dd")

# --- Retrieve Key Vaults ---
# Option A: Programmatically retrieve all Key Vaults in your subscription:
$vaults = Get-AzKeyVault

# Ensure we can download modules from PSGallery
Register-PSRepository -Name "PSGallery" -SourceLocation "https://www.powershellgallery.com/api/v2" -InstallationPolicy Trusted -ErrorAction SilentlyContinue

# Install/Update the Az module, which includes Az.KeyVault
Install-Module Az -Scope CurrentUser -Force

# Optionally, explicitly import Az.KeyVault
Import-Module Az.KeyVault

# Now the Update-AzKeyVaultSecretAttribute cmdlet should be available
Get-Command Update-AzKeyVaultSecretAttribute

# Option B: Use an explicit list of vault names if you prefer:
# $vaultNames = @("<KeyVaultName1>", "<KeyVaultName2>")
# $vaults = $vaultNames | ForEach-Object { Get-AzKeyVault -VaultName $_ }

foreach ($vault in $vaults) {
    $vaultName = $vault.VaultName
    Write-Host "Processing Key Vault: $vaultName"

    # Retrieve the latest version of all secrets in this Key Vault
    $secrets = Get-AzKeyVaultSecret -VaultName $vaultName

    foreach ($secret in $secrets) {
        Write-Host "Adding/updating tags for secret:" $secret.Name "Version:" $secret.Version

        # Retrieve any existing tags so we can add or update
        $tagHashtable = $secret.Tags
        if ($tagHashtable -eq $null) {
            $tagHashtable = @{}
        }

        # Add or update the specific tags you want
        $tagHashtable[$Tag1Key] = $Tag1Value
        $tagHashtable[$Tag2Key] = $Tag2Value

        # Update the secret's existing version with the new tags
        Update-AzKeyVaultSecretAttribute `
            -VaultName $vaultName `
            -Name $secret.Name `
            -Version $secret.Version `
            -Tags $tagHashtable

        Write-Host "Tags updated for secret:" $secret.Name
    }

    Write-Host "Completed processing Key Vault: $vaultName"
    Write-Host "-------------------------------------------"
}
